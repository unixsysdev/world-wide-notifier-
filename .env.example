# ========================================
# WORLD WIDE NOTIFIER - Environment Configuration
# ========================================
# Copy this file to .env and fill in your actual values
# For production deployment, see PRODUCTION.md

# ========================================
# GOOGLE OAUTH CONFIGURATION
# ========================================
# Get these from Google Cloud Console: https://console.cloud.google.com/
# 1. Create a new project or select existing
# 2. Enable Google+ API
# 3. Create OAuth 2.0 credentials
# 4. Add your domain to authorized origins
GOOGLE_CLIENT_ID=your_google_oauth_client_id_here
GOOGLE_CLIENT_SECRET=your_google_oauth_client_secret_here

# ========================================
# AI SERVICE API KEYS
# ========================================
# OpenAI API Key (for GPT models)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your_openai_api_key_here

# Anthropic API Key (for Claude models)
# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key_here

# ========================================
# EMAIL NOTIFICATION CONFIGURATION
# ========================================
# SendGrid API Key (for sending email notifications)
# Get from: https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=SG.your_sendgrid_api_key_here

# Email address to send notifications from
NOTIFICATION_EMAIL=notifications@yourdomain.com

# ========================================
# TEAMS WEBHOOK (OPTIONAL)
# ========================================
# Microsoft Teams webhook URL for Teams notifications
# Get from Teams: Connectors -> Incoming Webhook
TEAMS_WEBHOOK=https://your-org.webhook.office.com/webhookb2/your-webhook-url

# ========================================
# STRIPE PAYMENT CONFIGURATION
# ========================================
# Get these from Stripe Dashboard: https://dashboard.stripe.com/
# Use test keys (pk_test_, sk_test_) for development
# Use live keys (pk_live_, sk_live_) for production

# Stripe Publishable Key (frontend)
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here

# Stripe Secret Key (backend)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here

# Stripe Webhook Secret (for webhook verification)
STRIPE_WEBHOOK_SECRET=whsec_your_stripe_webhook_secret_here

# Stripe Price IDs for subscription plans
STRIPE_PREMIUM_PRICE_ID=price_your_premium_price_id_here
STRIPE_PREMIUM_PLUS_PRICE_ID=price_your_premium_plus_price_id_here

# ========================================
# URL CONFIGURATION
# ========================================
# Frontend URL (where your React app is hosted)
FRONTEND_URL=http://localhost:3000
# Production example: FRONTEND_URL=https://mon.yourdomain.com

# API URL (where your backend API is accessible)
API_URL=http://localhost:8000
# Production example: API_URL=https://mon.yourdomain.com/api

# Hostname (for internal service communication)
HOSTNAME=localhost
# Production example: HOSTNAME=mon.yourdomain.com

# ========================================
# DATABASE CONFIGURATION
# ========================================
# PostgreSQL Database URL
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://monitoring_user:monitoring_pass@localhost:5432/monitoring_db
# Production example: DATABASE_URL=postgresql://user:pass@your-db-host:5432/monitoring_db

# Redis URL (for caching and job queues)
# Format: redis://username:password@host:port
REDIS_URL=redis://localhost:6379
# Production example: REDIS_URL=redis://user:pass@your-redis-host:6379

# ========================================
# SECURITY CONFIGURATION
# ========================================
# JWT Secret for authentication (MUST be at least 32 characters)
# Generate with: openssl rand -base64 32
JWT_SECRET=your_super_secure_jwt_secret_at_least_32_characters_long

# Internal API key for service-to-service communication (MUST be at least 32 characters)
# Generate with: openssl rand -base64 32
INTERNAL_API_KEY=your_super_secure_internal_api_key_at_least_32_characters_long

# ========================================
# OPTIONAL CONFIGURATION
# ========================================
# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Maximum number of alerts per user per day (free tier)
MAX_ALERTS_FREE=3

# Maximum number of alerts per user per day (premium tier)
MAX_ALERTS_PREMIUM=100

# Default monitoring frequency in minutes
DEFAULT_FREQUENCY_MINUTES=60

# Alert cooldown period in hours (prevents duplicate emails)
ALERT_COOLDOWN_HOURS=1

# ========================================
# DEVELOPMENT ONLY (Docker/Container Settings)
# ========================================
# These enable file watching in Docker containers
# Remove these for native development (non-Docker)
# CHOKIDAR_USEPOLLING=true enables React hot reload in containers
# WATCHPACK_POLLING=true enables Webpack file watching in containers
CHOKIDAR_USEPOLLING=true
WATCHPACK_POLLING=true

# ========================================
# PRODUCTION CHECKLIST
# ========================================
# Before deploying to production:
# □ Replace all test keys with live keys
# □ Set secure JWT_SECRET and INTERNAL_API_KEY
# □ Update all URLs to your production domain
# □ Set up proper database and Redis instances
# □ Configure SSL certificates
# □ Set up proper backup strategy
# □ Review security settings
# □ Test all functionality thoroughly
#
# See PRODUCTION.md for detailed deployment instructions
